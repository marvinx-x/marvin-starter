

extends ../includes/layout/default

include ../utils/icons

append head

append vars
  - var documentTitle = "Marvin Starter - Styleguide"
  - var styleguide = true

append main
  each starterItem in starterItems
    - var item = starterItem.toLowerCase()

    .styleguide-content(id=item)
      h2.styleguide-title= starterItem

      case item
        when "colors"
          include partials/colors

        when "typography"
          include partials/typography

        when "titles"
          include partials/titles

        default
          p There is no item related to this section



  //- a(href="./index.html") back to starter

  //- .styleguide-title Marvin-Starter
  //- h1 Title level 1
  //- h2 Title level 2
  //- h3 Title level 3
  //- h4 Title level 4
  //- h5 Title level 5
  //- h6 Title level 6


  //- // Bootstrap glyphicons classes
  //- i.glyphicon.glyphicon-cloud
  //- i.glyphicon.glyphicon-remove
  //- i.glyphicon.glyphicon-user
  //- i.glyphicon.glyphicon-envelope
  //- i.glyphicon.glyphicon-thumbs-up
  //- // font-awesome classes
  //- i.fa.fa-spinner.fa-spin
  //- i.fa.fa-circle-o-notch.fa-spin
  //- i.fa.fa-refresh.fa-spin
  //- i.fa.fa-cog.fa-spin
  //- i.fa.fa-spinner.fa-pulse
  //- //- i.fa.fa-car.fa-4x.fa-stack-2x
  //- // material-design-icons class and contents
  //- i.material-icons cloud
  //- i.material-icons favorite
  //- i.material-icons attachment
  //- i.material-icons computer
  //- i.material-icons traffic

  //- - var methods = ["html", "css"]
  //- each method in methods
  //-   .styleguide-imgs.grid.col--6

  //-     - var extensions = ["jpg", "png", "gif", "svg", "webp", "data-uri"]
  //-     each extension, key in extensions
  //-       .col
  //-         - var name = method === 'html' ? 'html ' : 'css ';
  //-         p= key+1 + ': image '+ name +' ' + extension

  //-         if method === 'html'
  //-           case extension
  //-             when "jpg"
  //-               - var originalImgJpg = require("../"+imgDir+"image.jpg").src
  //-               +img-src(originalImgJpg)

  //-             when "png"
  //-               - var originalImgPng = require("../"+imgDir+"image.png").src
  //-               +img-src(originalImgPng, true)

  //-             when "gif"
  //-               +img-src(imgDir+"image.gif")

  //-             when "svg"
  //-               +img-src(imgDir+"image.svg", true, ' ', ' ', false)

  //-             when "webp"
  //-               - var originalImgWebp = require("../"+imgDir+"image.webp").src
  //-               +img-src(originalImgWebp, true)

  //-             when "data-uri"
  //-               - var originalImgDataUri = require("../"+imgDir+"image.jpg").placeholder
  //-               +img-src(originalImgDataUri, false, " ", 40, 40, false)

  //-         else
  //-           .img


  //- - var sizes = [1920, 1024, 480];
  //- - var heightImageSrcSet = 300;
  //- - var extImageSrcSet = 'jpg';
  //- - var imageSrcset = "https://via.placeholder.com/"+sizes[0]+"x"+heightImageSrcSet+"."+extImageSrcSet
  //- - var srcSet = imageSrcset +' '+ sizes[0]+"w, https://via.placeholder.com/"+sizes[1]+"x"+heightImageSrcSet+"."+extImageSrcSet+" "+sizes[1]+"w, https://via.placeholder.com/"+sizes[2]+"x"+heightImageSrcSet+"."+extImageSrcSet+" "+sizes[2]+"w";

  //- each method in methods
  //-   if method === 'html'
  //-     .styleguide-content
  //-       p image srcset html
  //-       +img-src(imageSrcset, false, "image srcset", sizes[1], heightImageSrcSet, false, srcSet, '100w')
  //-     .styleguide-content
  //-       p image srcset html picture
  //-       +img-src(imageSrcset, true, "image picture srcset", sizes[1], heightImageSrcSet, false, srcSet, '100w', extImageSrcSet)
  //-   else
  //-     .styleguide-content.styleguide-srcset
  //-       p image srcset css
  //-       .img

